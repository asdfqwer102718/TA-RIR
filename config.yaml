sample_rate: &sr 48000 

dataset:
  params:
    sr: *sr
    input_duration: 2.74
    input_length : &input_length 131072
    rir_duration: &rir_duration 1.0
    direct_delay : 100
    peak_norm_value : &peak_norm_value 0.5
    source_norm_value : -25.0
#    存储包括混响语音、RIR等信息在内的pickle文件的路径
    pickle_path: ''
#    存储house.mtl文件的数据集路径
    obj_path: ''
    num_of_scene_train: 210
    num_IRs_per_scene: 2
    num_speeches_per_IR: 50
    use_normalize: &use_normalize true


model:
  name: "model.FilteredNoiseShaper"
  params:
    num_filters : &num_filters 10
    filter_order : 1023
    sr: *sr
    rir_duration: *rir_duration
    input_length : *input_length
    early_length : &early_length 2400
    decoder_input_length : 400
    noise_condition_length : &noise_condition_length 16
    z_size : 128
    min_snr : 15
    max_snr : 50
    normalize : "rms"
    use_layer_norm: True      # 是否用LayerNorm替换BatchNorm
    rms_level : &rms_level 0.01
    graph_module:
      use_graph_module: true
      graph_embedding_length: 64
    reverberation_module:
      use_reverberation_module: true
#    是否对输入的音频进行归一化
    use_normalize: *use_normalize

train:
  params:
    gpus: "0,1,3"
    sr: *sr
    batch_size: 32
    num_workers: 1
    lr: &lr 0.000035
    lr_step_size : 80
    lr_decay_factor : 0.8
    gradient_clip_value: 5
    num_epochs : 5000
    validation_interval: 1
    evaluation_interval : 10
    checkpoint_interval: 1
    random_plot_interval : 1
    logging_dir : "logs"
    checkpoint_dir : "checkpoints"
    early_length: *early_length
    peak_norm_value: *peak_norm_value
    input_length: *input_length
    rms_level: *rms_level
    rir_duration: *rir_duration
    noise_condition_length : *noise_condition_length
    num_filters : *num_filters
    use_denormalization: true
  swa:
    use_swa: &use_swa false
    swa_lr: *lr
    swa_start: 60
    swa_freq: 5


eval:
  params : 
    sr : *sr 
    rms_level : *rms_level
    noise_condition_length : *noise_condition_length
    num_filters: *num_filters
    input_length : *input_length
